* The archive file maintained must use exactly the standard format defined in 
  '/usr/inc1ude/ar.h', and in fact may be tested with archives created with the
  ar command. 

The options listed above are compatible with the options having
the same name in the ar command, except for the following exceptions: 
* The -v and -t command take no further argument, and list all files in the
  archive. 
* -v is short for -t -v on the ar command.
* The -A command is a new option not in 
  the usual ar command.

* Commands other than -q report an error if the archive does not exist,
  or is in the wrong format.

NOTES
-----
-q 'myar' should create an archive file if it doesn't exist, using
    permissions ``666''.
-q and -A do not check to see if a file by the chosen name already exists.
  It simply appends the files to the end of the archive.
-x and -d operate on the first file matched in the archive,
   without checking for further matches.
-d You will have to build a new archive file to recover the space.
   Do this by unlinking the original file after it is opened, and creating
   a new archive with the original name.

* You will have to use the system calls stat and utime to properly deal 
  with extracting and restoring the proper timestamps. 
    Since the archive format only allows one timestamp, store the mtime and
    use it to restore both the atime and mtime. Permissions should also be 
    restored to the original value, subject to umask limitation.
* You are required to handle multiple file names as arguments.
* Since file I/O is expensive, do not make more than one pass through the
  archive file, an issue especially relevant to the multiple delete case.


Wrap open, read, write, stat functions to check errors
    create write function that takes 
Add error reporting to ar_hdr read
